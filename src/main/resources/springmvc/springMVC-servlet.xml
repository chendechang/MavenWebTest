<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd">

   <mvc:annotation-driven /> 
   
   <!-- make the aspectj annotation to be used -->
   <!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy>  -->  
   
   <!-- 扫描controller（controller层注入） -->
   <context:component-scan base-package="org.test"/>  
   
   <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
   <!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />    --> 

   <!-- don't handle the static resource -->
   <!-- <mvc:default-servlet-handler />  -->  

   <!-- configure the InternalResourceViewResolver -->
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
           id="internalResourceViewResolver">
       <!-- 前缀 -->
       <property name="prefix" value="/WEB-INF/view/" />
       <!-- 后缀 -->
       <property name="suffix" value=".jsp" />
   </bean>
   
    <!-- 引入jdbc配置文件 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
       <property name="locations">
           <list>
              <value>classpath:properties/*.properties</value>
               <!--要是有多个配置文件，只需在这里继续添加即可 -->
           </list>
       </property>
   </bean>


   <!-- 配置数据源 -->
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <!-- 不使用properties来配置 -->
       <!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> <property name="url" value="jdbc:mysql://localhost:3306/learning" /> <property name="username" value="root" /> <property name="password" value="christmas258@" /> -->
      <!-- 使用properties来配置 -->
       <property name="driverClassName">
           <value>${jdbc_driver}</value>
       </property>
       <property name="url">
           <value>${db_url}</value>
       </property>
       <property name="username">
           <value>${user}</value>
       </property>
       <property name="password">
           <value>${pass}</value>
       </property>
   </bean>  
   
   <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="org.test.dao" />
   </bean>

   <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource" />
       <property name="mapperLocations" value="classpath:mapper/*.xml"/>  
       <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
       <!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" /> -->
   </bean>    

</beans>